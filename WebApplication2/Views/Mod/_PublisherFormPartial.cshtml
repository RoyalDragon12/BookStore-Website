
@model WebApplication2.Models.Publisher

@{
    string imagePath = "/Images/user_icon.png";
}
<div class="row">
    <div class="col-4 text-center">
        <label for="photo">Photo:</label>
        @if (Model != null)
        {
            imagePath = "/Images/" + Model.PublisherCode + ".jpg";
        }
        <div>
            <img id="previewImage" src=@imagePath style="max-height:200px;max-width:200px" />
        </div>
        <div class="justify-content-center">
            <input type="file" name="photo" id="photo" style="margin:0 auto" />
        </div>
    </div>
    <div class="col-8">
        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @if (Model != null)
            {
                @Html.HiddenFor(model => model.PublisherId)
            }
            <div class="form-group h3">
                @Html.LabelFor(model => model.PublisherName, htmlAttributes: new { @class = "control-label col-md-3" })
                @if (Model != null)
                {
                    <div class="col-md-9">
                        @Html.HiddenFor(model => model.PublisherName)
                        @Html.DisplayFor(model => model.PublisherName, new { htmlAttributes = new { @class = "form-control h3", @style = "font-size:2rem" } })
                    </div>
                }
                else
                {
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.PublisherName, new { htmlAttributes = new { @class = "form-control h3", @style = "font-size:2rem" } })
                        @Html.ValidationMessageFor(model => model.PublisherName, "", new { @class = "text-danger" })
                    </div>
                }
            </div>
            <div>

            </div>
            <div class="form-group h3">
                @Html.LabelFor(model => model.PublisherCode, htmlAttributes: new { @class = "control-label col-md-3" })
                @if (Model != null)
                {
                    <div class="col-md-9">
                        @Html.HiddenFor(model => model.PublisherCode)
                        @Html.DisplayFor(model => model.PublisherCode, new { htmlAttributes = new { @class = "form-control", @style = "font-size:2rem" } })
                    </div>
                }
                else
                {
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.PublisherCode, new { htmlAttributes = new { @class = "form-control", @style = "font-size:2rem" } })
                        @Html.ValidationMessageFor(model => model.PublisherCode, "", new { @class = "text-danger" })
                    </div>
                }

            </div>

            <div class="form-group h3">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @style = "font-size:2rem" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group h3">
                @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control", @style = "font-size:2rem", @type = "number" } })
                    @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group h3">
                @Html.LabelFor(model => model.isHiddenBool, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9 row">
                    <div class="col-auto">
                        @Html.CheckBoxFor(model => model.isHiddenBool)
                    </div>
                    <div class="col">
                        <h3>Ẩn</h3>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    photo.onchange = evt => {
        const [file] = photo.files
        if (file) {
            previewImage.src = URL.createObjectURL(file)
        }
    }
</script>
